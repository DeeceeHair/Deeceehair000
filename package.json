{
  "name": "PhonePeSampleApp",
  "version": "0.0.1",
  "private": true,
  "scripts": {
    "android": "react-native run-android",
    "ios": "react-native run-ios",
    "lint": "eslint .",
    "start": "react-native start",
    "test": "jest"
  },
  "dependencies": {
    "react": "18.2.0",
    "react-native": "0.72.4",
    "react-native-dropdown-picker": "^5.4.6"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0",
    "@babel/preset-env": "^7.20.0",
    "@babel/runtime": "^7.20.0",
    "@react-native/eslint-config": "^0.72.2",
    "@react-native/metro-config": "^0.72.11",
    "@tsconfig/react-native": "^3.0.0",
    "@types/react": "^18.0.24",
    "@types/react-test-renderer": "^18.0.0",
    "babel-jest": "^29.2.1",
    "eslint": "^8.19.0",
    "jest": "^29.2.1",
    "metro-react-native-babel-preset": "0.76.8",
    "prettier": "^2.4.1",
    "react-test-renderer": "18.2.0",
    "typescript": "4.8.4"
  },
  "engines": {
    "node": ">=16"
  }
}

import request from 'supertest';
import { app } from '../index.js'; // Assuming app is exported from index.js

// Mock the Firebase Admin SDK to prevent initialization errors during tests
jest.mock('firebase-admin', () => ({
  initializeApp: jest.fn(),
  credential: {
    cert: jest.fn(),
  },
  auth: () => ({
    verifyIdToken: jest.fn().mockResolvedValue({ uid: 'test-uid' }),
  }),
}));

describe('GET /', () => {
  it('should respond with a success message and timestamp', async () => {
    const response = await request(app)
      .get('/')
      .expect('Content-Type', /json/)
      .expect(200);

    expect(response.body).toHaveProperty('message', 'Backend server is running successfully!');
    expect(response.body).toHaveProperty('timestamp');
  });
});

// We need a way to close the server after tests are done, especially if index.js starts listening.
// A better practice is to export the app without starting the server, and have a separate start file.
// For now, let's just ensure our test environment doesn't hang.
afterAll(done => {
  // If your server has a close method, you'd call it here.
  // Since we are just testing the express app object, we don't have a server to close.
  done();
});
